
Функция ОсновнойPOST(Запрос)

	УстановитьПривилегированныйРежим(Истина);
	 
	ЗаписьЖурналаРегистрации("POST",,,,"POST");
	Ответ = Новый HTTPСервисОтвет(200);
	
	CookieСтр = Запрос.Заголовки.Получить("cookie");
                                  

	Если CookieСтр<>Неопределено Тогда
		Cookie = ПолучитьCookie(CookieСтр);
	Иначе
		Cookie = Новый Соответствие();
	КонецЕсли;
	
	ТипЗапроса = Запрос.ПараметрыЗапроса.Получить("typerequest");
	ТелоЗапроса  = Запрос.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТелоЗапроса);
	ДанныеЗапроса = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	ДанныеОтвет = Новый Структура;
	
	messageRecipientKey = Запрос.Заголовки.Получить("messageRecipientKey");   
	
	
	Если  ТипЗапроса = "login" Тогда		
		
		ДанныеОтвета = Авторизация.Логин(ДанныеЗапроса.email,  ДанныеЗапроса.password);		
		
	ИначеЕсли  ТипЗапроса = "refreshToken" Тогда		
		
		
		
		ДанныеОтвета = Авторизация.ПолучитьТокен(Cookie.Получить("refreshToken"));			
		Если ЗначениеЗаполнено(ДанныеОтвета.error) Тогда
			Ответ = Новый HTTPСервисОтвет(401);
		КонецЕсли;
		
	ИначеЕсли  ТипЗапроса = "getConformationCode" Тогда
		
		ДанныеОтвета = Авторизация.ПолучитьКодПодтверждения(ДанныеЗапроса.userID);
		
	ИначеЕсли  ТипЗапроса = "getKeyChangePassword" Тогда
		
		ДанныеОтвета =  Авторизация.ПолучитьКлючСменыПароляПоКодуПодтверждения(ДанныеЗапроса.userID, ДанныеЗапроса.requestKey, ДанныеЗапроса.code);
		
	ИначеЕсли  ТипЗапроса = "passwordChange" Тогда
		
		ДанныеОтвета = Авторизация.УстановитьПароль(ДанныеЗапроса.passwordСhangeKey,  ДанныеЗапроса.password);
		
	Иначе
		
		accessToken = Запрос.Заголовки.Получить("authorization"); 
		
		
		//ЗаписьЖурналаРегистрации("accessToken---------",,,,accessToken);

		
		accessToken = СтрЗаменить(СтрЗаменить(accessToken, "bearer", ""), " ", "");
		
		
		СтруктураПользователя = Авторизация.ПолучитьПользоватеяПоКлючу(accessToken);
			
		Если  ЗначениеЗаполнено(СтруктураПользователя.error) Тогда
			Ответ = Новый HTTPСервисОтвет(401);
			ДанныеОтвета = Новый Структура("error",СтруктураПользователя.error);
		Иначе			
			
			Пользователь = СтруктураПользователя.user;
			ПараметрыСеанса.ТекущийПользователь =  Пользователь;
			Если  ТипЗапроса = "testPrivateRequest" Тогда
				ДанныеОтвета = Новый Структура("error, time","", Формат(ТекущаяДата(),"ДЛФ=DDT"));
				ДанныеОтвета.Вставить("numberSessions", ПолучитьСоединенияИнформационнойБазы().Количество());
			КонецЕсли;			
		КонецЕсли;     
		
	КонецЕсли;
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеОтвета); 
	ДанныеJSON = ЗаписьJSON.Закрыть();
	
	Ответ.Заголовки.Вставить("Content-Type","text/text; charset=UTF-8");
	Ответ.Заголовки.Вставить("Content-Type","application/json");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Headers", "Authorization,Content-type, Accept");
	Ответ.Заголовки.Вставить("Access-Control-Allow-Methods", "GET, POST, PUT");// и какие там еще есть методы у данного шаблона запроса

	refreshToken = "";
	Если ДанныеОтвета.Свойство("refreshToken", refreshToken) Тогда
		Ответ.Заголовки.Вставить("Set-Cookie","refreshToken='" + refreshToken + "'; HttpOnly");
	КонецЕсли;

	Ответ.УстановитьТелоИзСтроки(ДанныеJSON);
	Возврат Ответ;
		
КонецФункции


Функция ПолучитьCookie(стрCookies)
	
	Массив = СтрРазделить(стрCookies, ";",Истина);
	Результат  = Новый Соответствие();
	Для Каждого Элемент ИЗ Массив Цикл	
		КлючЗначение = StrSplit(Элемент, "=");
		Ключ = СокрЛП(КлючЗначение[0]);
		Значение = СтрЗаменить(СокрЛП(КлючЗначение[1]), "'", "");
		Результат.Вставить(Ключ, Значение);
	Конеццикла;
	Возврат Результат;
	
КонецФункции


